    1. 상속의 개념과 설계
 + 일반화 vs 구체화
 + Is-a 관계
 + 종속과문강목계
 + 클래스 재활용

    (1)final
 + final class
  - 상속 금지
 + final 변수
  - 상수
  - 값 변경 불가
 + final 멤버 함수
  - 오버라이딩(overriding) 불가

    (2)추상 클래스
 + 객체를 생성할 수 없는 클래스

    (3)super와 super()
 + super
  - 상위 클래스
  - this안에 포함되어 있음
 + super()
  - 상위 클래스의 생성자
  - 생성자 첫 머리에 자리
  - 사용하지 않을 경우 컴파일러가 기본 생성자 super() 추가


    2. package와 import
 + 유사한 클래스의 모음
 + 디렉토리 구조
 + 필요할 때 import로 사용

    (1)접근 지정자
private
default
protest


   1. 상속
클래스의 재사용
일반화에서 구체화 / is-a 관계
하나의 클래스만 상속 가능
멤버 추가 가능

   2. 접근 지정자
private는 무조건 접근 금지
protected는 자식 클래스에서만 접근 가능. 단, 동일 패키지 내의 클래스라면 자식 클래스가 아니어도 접근 허용
default는 패키지 외부에서의 접근을 금지. 무제한 허용
public는 모든 클래스에게 개방

   3. 멤버 함수 오버라이딩
부모 클래스의 멤버 함수를 재선언
추가된 속성을 반영할 수 있게 함


    1. 연산자의 탄생

    (1)논리 회로를 이용한 연산
NOT AND NAND OR NOR XOR XNOR


    2. 연산자의 종류 및 특성

    (1)대입 연산자
 + l-value & r-value
위치 / 대입 연산자 좌변 / 대입 연산자 우변, 없을 경우
의미 / 저장 공간을 의미 / 저장되어 있는 값

 + literal(상수값)
 문자
  - 아스키 문자('A')
  - 이스케이프 문자('\n')
  - 유니코드(한글 등('자'))
  - 아스키 코드 값('0x41')
 숫자
  - 10진수(25)
  - 2진수(0b)
  - 8진수(0342)
  *- 16진수(0xF2)
  - 소수점 표기
  - 지수 표기

    (2)비트 연산자
NOT / ~ / b = ~a;
AND / & / c = a & b;
OR / | / c = a | b;
XOR / ^ / c = a ^ b;

MSB(최상위 비트)

 + 비트 쉬프트 연산자

<< / b = a << 2; / 0101(5) => 1010(10)
>> / d = c >> 3;
>>> / f = e >>> 4;

    (3)논리 연산자
AND / && / a = b && c;
OR / || / a = b || c;
NOT / ! / g = !h;

    (4)산술 연산자
+ - * / %

    (5)복합 대입 연산자
+= -= *= /=

    (6)증감 연산자
++ --

    (7)관계 연산자
== / 같은가? 
=! / 다른가?

    (8)연산자 우선순위


    3. 형 변환

    (1)정보의 손실이 일어나는가?
하드웨어적 정보 손실
소프트웨어적 정보 훼손

자동 형변환
 Type이 다른 변수끼리의 연산 시 더 큰 쪽으로 Type을 변환하는것

    (2)형 변환


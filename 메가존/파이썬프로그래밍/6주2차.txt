    1. 집합의 이해

    (1)집합이란
 + 자료의 묶음
 + 집합은 중복된 데이터를 가질 수 없으며 순서가 없음
 + 집합의 생성
s = set()
s = {1, 2, 5}
 + 집합에 원소를 추가하려면 add()를 사용
s.add(10)
s.add(3)
print(3)
 >> {1, 2, 3, 5, 10}
 + 집합의 항목을 삭제 함수: discard(), remove(), clear()
s.discard(5)
print(s)
 >> {1, 2, 3, 10}
s.remove(2)
print(s)
 >> {1, 3, 10}
s.remove(7)
 >> error:KeyError:7
s.clear()
print(s)
 >>set()


    2. 집합의 특징

    (1)집합의 특징
 + 집합 내의 모든 원소들은 서로 달라야 함
s = {6, 1, 3, 1, 7}
s
 >> {1, 3, 6, 7}
 + 집합 내의 원소들 간 순서가 없음
{1, 2, 3} = {2, 3, 1}
 + 여러 데이터 타입의 원소들이 집합에 포함될 수 있음
list_1 = {1, 7, 7, 3, 5, 8, 2, 7, 1}
set(list_1)
list_1 = list(set(list_1))
list_1
 >> [1, 2, 3, 5, 7, 8]

    (2) 집합에 적용되는 메소드
 + add 메소드: 한번에 한개씩 원소를 집합에 추가
집합.add(원소)


    3. 집합의 연산

    (1)집합 연산자
 + 교집합 연산: &
 + 합집합 연산: |
 + 차집합 연산: -
 + 대칭차집합 연산: ^

    1. 집합
자료의 묶음
집합은 중복된 데이터를 가질 수 없으며 순서가 없음

    2. 집합에 적용되는 메소드
add 메소드: 한 번에 한 개씩 원소를 집합에 추가
remove 메소드, discard 메소드: 집합에서 하나의 원소를 삭제

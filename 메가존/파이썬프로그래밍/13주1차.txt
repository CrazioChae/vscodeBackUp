    1. 클래스의 개념

    (1)클래스란
 + 주로 객체 지향 프로그래밍을 위해 필요한 개념
  - C/C++/파이썬 등 모두 절차 지형 방식
  - 절차 지형은 순서대로 코드를 작성하는 방식
 + C++/파이썬은 Class라는 개념이 있어 객체 지향 프로그래밍이 가능
 + 클래스는 자료형을 위한 일종의 템플릿
 + 함수란 특정 작업을 수행하기 위해 독립적으로 설계된 코드
 + 함수의 호출은 특정 작업만을 수행
 + 결과값을 사용하기 위해서는 저장해야 함
 + 함수를 포함한 프로그램 코드의 일부를 재사용 하기 위해선
  데이터가 저장되는 변수까지도 한꺼번에 관리하는 것이 유리
 + 이처럼 함수뿐 아니라 변수까지 묶어
  관리하고 재사용할 수 있게 해주는 것이 클래스

    (2)객체
 + 클래스는 틀, 객체는 틀에서 나온 결과물
 + 한 클래스로부터 많은 객체를 생성할 수 있음
 + 객체 지향 프로그래밍(Object-Oriented Programming)
  - 객체를 사용해 데이터를 표현하는 프로그래밍

    (3)속성과 메소드
 + 클래스에 포함되는 변수: 속성
 + 클래스에 포함되는 함수: 메소드
 + 클래스의 속성과 메소드를 한꺼번에 클래스 멤버라고 함

    (4)클래스 선언하기
 + class 키워드를 사용해 선언
 + def 키워드를 사용해 메소드를 선언
 + 속성은 변수를 선언하는 방법으로 선언

    (5)인스턴스 생성하기
 + 인스턴스: 클래스를 기반으로 생성된 객체
 + 클래스명에 소괄호를 사용해 해당 클래스의 인스턴스를 생성
 + 인스턴스에 dot(.) 연산자를 사용해 속성이나 메소드를 호출함


    2. 사칙연산 클래스 만들기

    (1)클래스를 어떻게 만들지 구상하기


    1. 클래스(Class)
함수뿐만 아니라 관련된 변수까지도 한꺼번에 묶어서
 관리하고 재사용할 수 있게 해주는 것
주로 '객체 지향 프로그래밍'을 위해 필요한 개념이며,
 자료형을 위한 일종의 템플릿 역할
클래스 안에는 다양한 유형의 정보가 담겨 있고,
 자료형과 어떻게 상호작용할 것인지 적혀 있음
“class 클래스명”을 사용하여 정의

    2. 객체(Object)
붕어빵 틀을 클래스라고 한다면,
 붕어빵 틀에서 찍혀 나온 붕어빵 하나하나는 객체
하나의 클래스로부터 무수히 많은 객체 생성 가능
객체를 사용하여 데이터를 표현하는 프로그래밍 기법을
 객체 지향 프로그래밍(Object-Oriented Programming, OOP)이라 함

    3. 클래스 멤버(Class member)
클래스에 포함되는 변수는 속성(attribute),
 함수는 메소드(method)라 하며,
 속성과 메소드를 합쳐 클래스 멤버라 지칭
은행 업무를 클래스로 작성한다면 속성으로는
 계좌번호, 소유주, 잔액, 이자율 등이,
 메소드로는 입금하기, 출금하기, 이체하기 등이 해당

    4. 인스턴스(Instance)
클래스를 기반으로 생성된 객체
클래스명에 소괄호(())를 사용하여 해당 클래스의 인스턴스 생성
생성된 인스턴스에 닷(.) 연산자를 사용하면
 해당 클래스의 속성이나 메소드 호출

    5. 다형성(Polymorphism)
하나의 객체가 여러 가지 타입을 가질 수 있는 것을 의미

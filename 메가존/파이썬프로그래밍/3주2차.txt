    1. 산술 연산자

    (1)산술 연산자의 종류
 = / 대입 연산자
 + / 더하기
 // / 나누기(몫)
 ** / 제곱

 + 세미콜론(;)은 앞뒤를 완전히 분리
 + a, b, c = 2, 3, 4 => a = 2, b = 3, c = 4

    (2)산술 연산자의 우선순위
 + 괄호 > 곱셈(나눗셈) > 덧셈(뺄셈)


    2. 관계 연산자

    (1)관계 연산자의 개념
 + 어떤 것이 크고 작은지 비교하는 것
 + 주로 조건문(if)이나 반복문(while)에서 사용
 + 단독으로는 거의 사용하지 않음

 == / 같다
 != / 같지 않다
 > / 크다


    3. 논리 연산자

    (1)논리 연산자의 종류와 사용
 + and, or, not
 and / 그리고
 or / 또는
 not / 아니다


    4. 비트 연산자

    (1)비트 연산자의 개념
 + 정수를 2진수로 변환한 뒤 각 자리의 비트끼리 연산 수행
 + 비트 연산자의 종류: &, |, ^, ~, <<, >>
 
 & / 비트 논리곱(and)
 | / 비트 논리합(or)
 ^ / 비트 논리적 배타합(xor)
 ~ / 비트 부정(1은 0, 0은 1로 변경)
 << / 비트 이동(왼쪽)
 >> / 비트 이동(오른쪽)

    (2)비트 논리곱과 비트 논리합 연산자
 + and는 그 결과가 참 혹은 거짓
 + &는 비트 논리곱을 수행한 결과가 나옴
 + 비트 연산은 0과 1밖에 없음, 0은 거짓, 1은 참
 + 10&7의 결과는 10진수를 2진수로 변환한 후
  각 비트마다 & 수행, 2진수로는 0010, 10진수로는 2

    (3)비트 배타적 논리합
 + 두 값이 다르면 1, 같으면 0
 + 10^7의 결과는 2진수 1101, 10진수 13


    5. 연산자 우선순위

    (1)연산자 우선순위
 + 수식에 2개 이상의 연산자가 사용될 때 우선순위를 결정
 괄호 > 지수 > 단항 연산자 > 산술 연산자 > 비트 쉬프트 연산자
  > 비트 논리곱 > 비트 배타적 논리합, 논리합 > 관계 연산자(비교)
  > 논리 연산자 > 대입 연산자


    1. 산술 연산자
세미콜론(;)은 앞뒤를 완전히 분리하므로, a=5; b=3은 다음과 동일
>>> a=5
>>> b=3
또, 콤마(,)로 분리해서 값을 대입할 수도 있어,
 a, b=5, 3의 결과도 위와 동일

    2. 관계 연산자
어떤 것이 크거나 작거나 같은지 비교하는 것
참은 True로, 거짓은 False로 표시
주로 조건문(if)이나 반복문(while)에서 사용
단독으로는 거의 사용하지 않음
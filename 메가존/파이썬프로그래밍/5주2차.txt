    1. while문

    (1)while문 개요
while 조건식:
    문장

 + while문 작성 시 흔한 실수
  - 루프 변수를 초기화하지 않음

    (2)센티널
 + 특별한 값이 입력되었는지 테스트하도록 while문의 조건식을 표현
 + 값들의 시퀀스의 끝을 나타내는 특별한 값
 + 유효한 입력 값들에는 나타날 수 없는 값
 + 센티널을 읽으면 조건식이 거짓이 되어 while문을 끝냄


    2. 무한 루프 while문 이해

    (1)무한 반복
 + 무한히 반복해서 수행하는 반복문
 + 특정 조건에서 무한 반복을 멈추게 설계

sign = True
while sign:
    light = input('신호등 색상 입력: ')
    if light == 'blue':
        sign = False
        break
    print('지나가십쇼')

    (2)무한 반복의 멈춤
 + 무한 루프(infinite loop)

    (3)for문과 while문 비교
 + for문의 형식
for 변수 in range(시작값, 끝값-1, 증가값)
 + for문은 range()함수를 사용해 횟수만큼 반복
 + for문과 비슷하게 사용할 수 있는 while문의 형식
변수 = 시작값
while 변수 < 끝값:
    반복문
    변수 = 변수 + 증가값


    3. break와 continue

    (1)break문과 continue문
 + 반복문을 중간에 빠져나오고 싶을 때
  - break문: 반복문 바로 아래 문장으로 제어를 넘김
  - continue문: 반복문의 헤더로 제어를 넘김
 + break문과 continue문의 비교

    (2)break
 + 강제로 반복 중지

    (3)continue
 + 해당 차례를 건너뛰고 새롭게 다음 차례의 반복을 수행

i = 0
while i < 3:
    print(f'{}: 안녕하세요? while문 학습중입니다.')
    i += 1

i, hap = 1, 0
while i < 11:
    hap += i
    i += 1
print(f'1부터 10까지의 합계: {hap}')

i = 1
while i != 1.3:
    print(i)
    i += 0.1

while True:
    light = input('신호등 색상 입력: ')
    if light == 'blue':
        print('출발')
        break
    print('정지')

hap, i = 0, 0
for i in range(1, 101):
    if i % 5 == 0:
        continue
    hap += i
print(f'1~100의 합계(5의 배수 제외): {hap}')

for n in range(10):
    if n % 2 == 0:
        continue
    print(n)

    1. 센티널
특별한 값이 입력되었는지 테스트하도록 while 문의 조건식을 표현
값들의 시퀀스의 끝을 나타내는 특별한 값
유효한 입력 값들에는 나타날 수 없는 값

    2. 무한 반복
while 문의 몸체를 무한히 반복해서 수행하는 반복문
for 문은 정해진 횟수만큼 반복하기 때문에 무한 반복에 빠지지 않음

    3. break와 continue
반복문을 중간에 빠져나오고 싶을 때 사용
break 문: 반복문의 몸체 바로 아래의 문장으로 제어를 넘김
continue 문: 반복문의 헤더로 제어를 넘김
